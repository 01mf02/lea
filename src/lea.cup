package lea;
 
import java_cup.runtime.*;
import java.io.*;
import java.lang.*;
import lea.types.*;
import lea.constants.*;

parser code  {: 
 public void report_fatal_error(String message, Object info) 
  {
  	report_error( message,  info);
  }
  
  public void report_error(String message, Object info) 
  {
  	java_cup.runtime.Symbol symb = (java_cup.runtime.Symbol)info;
  	System.out.println("Ligne : " + symb.left + " Colonne : " + symb.right + "   : " + message);
  }
:};

/*terminal IF, THEN, ELSE, WHILE, DO,
    OF, 
    LPAR, RPAR, LBRACE, RBRACE, LBRACKET, RBRACKET,
    SEMIC, COLON,
    AFF, AND, OR, LT, GT, LE, GE, EQ, DIFF, PLUS, MINUS, MINUS_U, MULT, DIV,
    INT, FLOAT, STRING, CHAR, BOOL,
    FUNCTION,LIST, TRUE, FALSE,
    COMMA, STRUCT,SLOT,MODULO,TO,REPEAT,BOOL,CASE;*/
    
terminal EQ, SEMIC,FUNCTION, LPAR,RPAR ,COLON, LBRACE, RBRACE,INT, FLOAT, STRING, CHAR, BOOL,COMMA;

terminal String IDENTIFIER, INTEGER;

non terminal axiom,constDecl,funct,block,decls,decl,type,functDecls, functDecl;

start with axiom;

axiom ::= 
		funct
		|constDecl axiom
		|funct axiom
		|constDecl	
		;
		
type ::=
	INT {:  :}
	| FLOAT {:  :}
	| CHAR   {: :}
	| STRING  {: :}
	| BOOL {::}
	;
		
		
constDecl ::= 
		IDENTIFIER:id EQ INTEGER:i SEMIC
		{:
		  	System.out.println("ID ");
		  	/*Main.constTable.put("MAX",new IntConstant(1));
		  	System.out.println(Main.constTable.toString());*/
		:}
		;
	
funct ::= 
		FUNCTION IDENTIFIER:id LPAR functDecls RPAR COLON block:b
		{:
		  	System.out.println("Func ");
		:};
		
block ::=
	LBRACE decls RBRACE {:
	    System.out.println("BLOCK ");
	    :}
	;

decls ::=
	decls decl
	| decl
	;

decl ::=  IDENTIFIER:id COLON type:t SEMIC ;

functDecls ::=
	functDecls COMMA functDecl
	| functDecl
	;

functDecl ::=  IDENTIFIER:id COLON type:t ;
		
	/*	
notee ::=
   IF THEN ELSE WHILE DO OF  LPAR RPAR LBRACE RBRACE LBRACKET RBRACKET SEMIC COLON AFF AND OR LT GT LE GE EQ DIFF PLUS MINUS MINUS_U MULT DIV
    INT FLOAT STRING CHAR FUNCTION LIST TRUE FALSE COMMA STRUCT SLOT MODULO TO REPEAT BOOL CASE
    {::};*/
    
    
    
    