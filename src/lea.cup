package lea;
 
import java_cup.runtime.*;
import java.io.*;
import java.lang.*;
import lea.types.*;
import lea.constants.*;

parser code  {: 
 public void report_fatal_error(String message, Object info) 
  {
  	report_error( message,  info);
  }
  
  public void report_error(String message, Object info) 
  {
  	java_cup.runtime.Symbol symb = (java_cup.runtime.Symbol)info;
  	System.out.println("Ligne : " + symb.left + " Colonne : " + symb.right + "   : " + message);
  }
:};

/*terminal IF, THEN, ELSE, WHILE, DO,
    OF, 
    LPAR, RPAR, LBRACE, RBRACE, LBRACKET, RBRACKET,
    SEMIC, COLON,
    AFF, AND, OR, LT, GT, LE, GE, EQ, DIFF, PLUS, MINUS, MINUS_U, MULT, DIV,
    INT, FLOAT, STRING, CHAR,
    FUNCTION,LIST, TRUE, FALSE,
    COMMA, STRUCT,SLOT,MODULO,TO,REPEAT,BOOL,CASE;*/
    
terminal EQ, SEMIC;

terminal String IDENTIFIER, INTEGER;

non terminal axiom,constDecl,notee;

start with axiom;

axiom ::= 
		constDecl:c
		{:
			System.out.println("Decl ");
			
		:}
		;
		
constDecl ::= 
		IDENTIFIER:id EQ INTEGER:i SEMIC
		{:
		  	System.out.println("ID ");
		:}
		;
		/*|
		notee
		{::}
		;
		
notee ::=
   IF THEN ELSE WHILE DO OF  LPAR RPAR LBRACE RBRACE LBRACKET RBRACKET SEMIC COLON AFF AND OR LT GT LE GE EQ DIFF PLUS MINUS MINUS_U MULT DIV
    INT FLOAT STRING CHAR FUNCTION LIST TRUE FALSE COMMA STRUCT SLOT MODULO TO REPEAT BOOL CASE
    {::};*/
    
    
    
    