MEANING = 12;
PI = 3.14159265358979;
LETTER = 'b';
TRUER = true;
FALSER = false;
SHAKESPEARE = "To be or not to be ...";
LIST_OF_INT = [1,2,3,4,5,6];
TUPLE_OF_THREE = (34, SHAKESPEARE, PI);
color = enum (rouge, vert, bleu, cyan, magenta, jaune);

fiche = struct {
	age:int;
	nom:string;
	sexe:bool;
}
fiche2 = struct {
	age:int;
	nom:string;
	sexe:bool;
}

procedure types()
{
	i : int;
	i := MEANING;
	
	f : float;
	f := PI;

	s : string;
	s := SHAKESPEARE;
	
	c : char;
	c := LETTER;
	
	tup:(int,char,string,float);
	tup := (i,c,s,f);
	types();
}

procedure deif()
{
	rgb: (int, int, int);
	couleur: color;// enum (rouge, vert, bleu, cyan, magenta, jaune);
	couleur:= rouge;
	case couleur
	{
		rouge:
		    rgb := (255, 0, 0);
		vert:
		    rgb := (0, 255, 0);
		bleu:
		    rgb := (0, 0, 255);
		cyan:
		    rgb := (0, 255, 255);
	}

	read();
	
	str : string;
	str := "hello";
	//str.length();


	types();
}

function ret() : int
{
	g:int := ret();
	return 23;
}

//This is way too complex
function wooTooComplexFunction(arg:int,arg0:string) : int
{	
	if(ret() + arg > 2 || (true && false && false) || arg0 = "gre" || 6%5 != 1 || !true || 4 >= 2 || 4 <= 2 || 4 < 2)
	{
		it:int := 0;
		while(arg - it > 0)
		{
			dre:float := 1.0 ;
			dre := -PI * dre - dre + dre / dre ;
			
			
			str:string;
			str := arg0 + "chocolat";
		}
		return 1;
	}
	else
	{
		return 0;
	}
}

/*Je suis un commentaire
qu'on met sur plusieurs lignes*/
procedure main()
{
	li:list of int := LIST_OF_INT;
	//TODO!
	//liSimple:list of int := [123];
	liComplex:list of list of int := [[12,23],[12, 222, 333], [123, 7]];
	
	tp:(int, string, float) := TUPLE_OF_THREE;
	tpComplex:(int, float) := (3 + 10 * 2, PI + PI);
	
	test : int := wooTooComplexFunction(100,"GRELE");
}

