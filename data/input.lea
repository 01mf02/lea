MEANING = 12;
PI = 3.14159265358979;
SHAKESPEARE = "To be or not to be ...";
LIST_OF_INT = [1,2,3,4,5,6];
TUPLE_OF_THREE = 34, SHAKESPEARE, PI;

fiche = struct {
	age:int;
	nom:string;
	sexe:bool;
}
fiche2 = struct {
	age:int;
	nom:string;
	sexe:bool;
}

procedure types()
{

	i : int;
	i := MEANING;
	
	f : float;
	f := PI;

	s : string;
	s := SHAKESPEARE;
	return;
}

procedure deif()
{
	gh:int;
	
	listee:list of list of list of fiche;
	lyst:list of list of fiche;
	
	lyst := listee[1];
	
	luistie:list of fiche;
	luistie := lyst[gh];
	
	polist:fiche;
	
	polist.nom := "Raoul";
	polist.age := 22;
	polist.sexe := True;
	
	luistie[1] := polist;

	
	gh := 1;
	if(gh > 2)
	{
		gh := 1;
	}
	types();
}

function ret() : int
{
	gh:int;
	gh := 1;
	repeat
	{
		if(gh > 2)
		{
			gh := 1;
		}
	}
	while(true)
	return gh;
}

//This is way too complex
function wooTooComplexFunction(arg:int,arg0:string) : int
{
	ret();	//Absorbing return type
	
	if(ret() + arg > 2)
	{
		it:int := 0;
		while(arg - it > 0)
		{
			dre:float := 0.0 ;
			dre := PI * dre;
			
			str:string;
			str := arg0 + "chocolat";
		}
		return 1;
	}
	else
	{
		return 0;
	}
	
}

/*Je suis un commentaire
qu'on met sur plusieurs lignes*/
function main(arg:int,arg0:string) : int
{
	li:list of int := LIST_OF_INT;
	liSimple:list of int := [123];
	liComplex:list of list of int := [[12,23],[12, 222, 333], [123, 7]];
	
	tp:(int, string, float) := TUPLE_OF_THREE;
	tpComplex:(int, float) := (3 + 10 * 2, PI + PI);
	
	return wooTooComplexFunction(100,"GRELE");
}

