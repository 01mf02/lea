THIS_IS_FALSE = true;
MEANING = 42;
PI = 3.14;
FIRST_LETTER = 'A';
SHAKESPEARE = "To be or \"not\" to be ...";
FIBONACCI = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55];
TUPLE = (THIS_IS_FALSE, MEANING, PI, FIRST_LETTER, SHAKESPEARE, FIBONACCI);

month = enum (JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC);
date = (int, month, int);

person = struct
{
	name : string;
	birthday : date;
}

// singly-linked list
person_list = struct
{
	elem : person;
	next : person_list;
}

procedure print_fibonacci(n1 : int, n2 : int, iter : int, count : int)
{
	if (iter >= count)
	{
		return;
	}

	writeln(n1.toString());
	n3 : int := n1 + n2;
	print_fibonacci(n2, n3, iter+1, count);
}

procedure print_int_list(l : list of int)
{
	i : int := 0;
	while (i < l.length())
	{
		writeln(l[i].toString());
		i := i+1;
	}
}

function create_logicians() : person_list
{
	goedel : person_list;
	turing : person_list;

	goedel_elem : person;
	goedel.elem := goedel_elem;
	turing_elem : person;
	turing.elem := turing_elem;
	
	goedel.elem.name := "Kurt Goedel";
	goedel.elem.birthday := (28, APR, 1906);
	goedel.next := turing;

	turing.elem.name := "Alan Turing";
	turing.elem.birthday := (23, JUN, 1912);

	return goedel;
}

function main(l : list of string) : int
{
	writeln("Hello World!");

	writeln("Fibonacci numbers as list:");
	print_int_list(FIBONACCI);

	writeln("Fibonacci numbers as function:");
	print_fibonacci(1, 1, 0, 10);

	logicians : person_list := create_logicians();
	
	return 0;
}
