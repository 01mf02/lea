MEANING = 42;
PI = 3.14;
SHAKESPEARE = "To be or not to be ...";
FIBONACCI = [1, 2, 3, 5, 8];
TUPLE = (MEANING, PI, SHAKESPEARE, FIBONACCI);

date = (int, int, int);

person = struct
{
	name : string;
	birthday : date;
}

// singly-linked list
person_list = struct
{
	elem : person;
	next : person_list;
}

procedure print_fibonacci(n1 : int, n2 : int, iter : int)
{
	if (iter >= 10)
	{
		return;
	}
	n3 : int;
	n3 := n1 + n2;
	writeln(n1.toString());
	print_fibonacci(n2, n3, iter+1);
}

procedure print_int_list(l : list of int)
{
	/*for i in [0 .. l.length()]
	{
		writeln(l[i].toString());
	}*/
}

function main(l : list of string) : int
{
	writeln("Hello World!");

	writeln("Fibonacci numbers as list:");
	print_int_list(FIBONACCI);

	writeln("Fibonacci numbers as function:");
	print_fibonacci(1, 1, 0);

	return 0;
}
